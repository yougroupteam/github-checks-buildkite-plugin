#!/bin/bash

set -e 
set -x

export LC_ALL=C.UTF-8
export LANG=C.UTF-8

COMPOSE_CONFIG=`dirname $BASH_SOURCE`/../docker-compose.yml

run_params=()
args=()

docker-compose -f ${COMPOSE_CONFIG} build ghapp

if [[ "${BUILDKITE_PLUGIN_GITHUB_CHECKS_DEBUG:-false}" =~ (true|on|1) ]] ; then
  args+=("-vv")
else
  args+=("-v")
fi

# Weaken security in the name of convenience. Pass the private-key and id as
# env vars *if* they're specified as paths in the current environment. Saves
# the trouble of determining how to pass mounts into the run container, as we
# *may* be inside a container ourselves.
if [[ -n "${BUILDKITE_PLUGIN_GITHUB_CHECKS_APP_ID:-}" ]] ; then
  GITHUB_APP_AUTH_ID="${BUILDKITE_PLUGIN_GITHUB_CHECKS_APP_ID}"
fi

if [[ -f "${GITHUB_APP_AUTH_ID:-}" ]] ; then
  echo "+ GITHUB_APP_AUTH_ID=\$(cat ${GITHUB_APP_AUTH_ID})"
  GITHUB_APP_AUTH_ID=$(cat ${GITHUB_APP_AUTH_ID})
fi

if [[ -n "${BUILDKITE_PLUGIN_GITHUB_CHECKS_PRIVATE_KEY:-}" ]] ; then
  GITHUB_APP_AUTH_KEY="${BUILDKITE_PLUGIN_GITHUB_CHECKS_PRIVATE_KEY}"
fi

# set +x so we don't leak file contents
set +x
if [[ -f "${GITHUB_APP_AUTH_KEY:-}" ]] ; then
  echo "+ GITHUB_APP_AUTH_KEY=\$(cat ${GITHUB_APP_AUTH_KEY})"
  GITHUB_APP_AUTH_KEY=$(cat ${GITHUB_APP_AUTH_KEY})
fi
set -x

expand_relative_volume_path() {
  local path="$1"
  echo "${path/.\//$PWD/}"
}

IFS=';' read -r -a default_volumes <<< "${BUILDKITE_DOCKER_DEFAULT_VOLUMES:-}"
for vol in "${default_volumes[@]:-}"
do
  # Trim all whitespace when checking for variable definition, handling cases
  # with repeated delimiters.
  [[ ! -z "${vol// }" ]] && run_params+=("-v" "$(expand_relative_volume_path "$vol")")
done

DURATION=$(echo "scale=3; 1 + ($RANDOM/32767*2)" | bc)
echo "Sleep started at $(date '+%Y-%m-%d %H:%M:%S'), sleeping for $DURATION seconds"
sleep "$DURATION"
echo "Sleep ended at $(date '+%Y-%m-%d %H:%M:%S')"

docker-compose -f ${COMPOSE_CONFIG} run "${run_params[@]}" --workdir=`pwd` --rm ghapp "${args[@]}" "$@"

docker-compose -f ${COMPOSE_CONFIG} down
